|ServoController
PQM_out <= pwm_generator:inst.pwm
enable => pwm_generator:inst.rst_n
enable => clockDivider:inst1.reset
clk => clockDivider:inst1.clk
clk => i2cSlave:inst2.clk
Reset => i2cSlave:inst2.rst
SCL => i2cSlave:inst2.scl
SDA <> i2cSlave:inst2.sda


|ServoController|pwm_generator:inst
pwm <= pwm~reg0.DB_MAX_OUTPUT_PORT_TYPE
duty_cycle[0] => WideOr0.IN0
duty_cycle[0] => LessThan0.IN8
duty_cycle[1] => WideOr0.IN1
duty_cycle[1] => LessThan0.IN7
duty_cycle[2] => WideOr0.IN2
duty_cycle[2] => LessThan0.IN6
duty_cycle[3] => WideOr0.IN3
duty_cycle[3] => LessThan0.IN5
duty_cycle[4] => WideOr0.IN4
duty_cycle[4] => LessThan0.IN4
duty_cycle[5] => WideOr0.IN5
duty_cycle[5] => LessThan0.IN3
duty_cycle[6] => WideOr0.IN6
duty_cycle[6] => LessThan0.IN2
duty_cycle[7] => WideOr0.IN7
duty_cycle[7] => LessThan0.IN1
rst_n => count[0].ACLR
rst_n => count[1].ACLR
rst_n => count[2].ACLR
rst_n => count[3].ACLR
rst_n => count[4].ACLR
rst_n => count[5].ACLR
rst_n => count[6].ACLR
rst_n => count[7].ACLR
rst_n => pwm~reg0.ACLR
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => pwm~reg0.CLK


|ServoController|clockDivider:inst1
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => newClk~reg0.CLK
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => newClk~reg0.ACLR
newClk <= newClk~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ServoController|i2cSlave:inst2
clk => clk.IN2
rst => rstPipe.OUTPUTSELECT
rst => rstPipe[0].DATAIN
sda <> sda
scl => sclPipe.DATAA
myReg0[0] <= registerInterface:u_registerInterface.myReg0
myReg0[1] <= registerInterface:u_registerInterface.myReg0
myReg0[2] <= registerInterface:u_registerInterface.myReg0
myReg0[3] <= registerInterface:u_registerInterface.myReg0
myReg0[4] <= registerInterface:u_registerInterface.myReg0
myReg0[5] <= registerInterface:u_registerInterface.myReg0
myReg0[6] <= registerInterface:u_registerInterface.myReg0
myReg0[7] <= registerInterface:u_registerInterface.myReg0
myReg1[0] <= registerInterface:u_registerInterface.myReg1
myReg1[1] <= registerInterface:u_registerInterface.myReg1
myReg1[2] <= registerInterface:u_registerInterface.myReg1
myReg1[3] <= registerInterface:u_registerInterface.myReg1
myReg1[4] <= registerInterface:u_registerInterface.myReg1
myReg1[5] <= registerInterface:u_registerInterface.myReg1
myReg1[6] <= registerInterface:u_registerInterface.myReg1
myReg1[7] <= registerInterface:u_registerInterface.myReg1
myReg2[0] <= registerInterface:u_registerInterface.myReg2
myReg2[1] <= registerInterface:u_registerInterface.myReg2
myReg2[2] <= registerInterface:u_registerInterface.myReg2
myReg2[3] <= registerInterface:u_registerInterface.myReg2
myReg2[4] <= registerInterface:u_registerInterface.myReg2
myReg2[5] <= registerInterface:u_registerInterface.myReg2
myReg2[6] <= registerInterface:u_registerInterface.myReg2
myReg2[7] <= registerInterface:u_registerInterface.myReg2
myReg3[0] <= registerInterface:u_registerInterface.myReg3
myReg3[1] <= registerInterface:u_registerInterface.myReg3
myReg3[2] <= registerInterface:u_registerInterface.myReg3
myReg3[3] <= registerInterface:u_registerInterface.myReg3
myReg3[4] <= registerInterface:u_registerInterface.myReg3
myReg3[5] <= registerInterface:u_registerInterface.myReg3
myReg3[6] <= registerInterface:u_registerInterface.myReg3
myReg3[7] <= registerInterface:u_registerInterface.myReg3
myReg4[0] => myReg4[0].IN1
myReg4[1] => myReg4[1].IN1
myReg4[2] => myReg4[2].IN1
myReg4[3] => myReg4[3].IN1
myReg4[4] => myReg4[4].IN1
myReg4[5] => myReg4[5].IN1
myReg4[6] => myReg4[6].IN1
myReg4[7] => myReg4[7].IN1
myReg5[0] => myReg5[0].IN1
myReg5[1] => myReg5[1].IN1
myReg5[2] => myReg5[2].IN1
myReg5[3] => myReg5[3].IN1
myReg5[4] => myReg5[4].IN1
myReg5[5] => myReg5[5].IN1
myReg5[6] => myReg5[6].IN1
myReg5[7] => myReg5[7].IN1
myReg6[0] => myReg6[0].IN1
myReg6[1] => myReg6[1].IN1
myReg6[2] => myReg6[2].IN1
myReg6[3] => myReg6[3].IN1
myReg6[4] => myReg6[4].IN1
myReg6[5] => myReg6[5].IN1
myReg6[6] => myReg6[6].IN1
myReg6[7] => myReg6[7].IN1
myReg7[0] => myReg7[0].IN1
myReg7[1] => myReg7[1].IN1
myReg7[2] => myReg7[2].IN1
myReg7[3] => myReg7[3].IN1
myReg7[4] => myReg7[4].IN1
myReg7[5] => myReg7[5].IN1
myReg7[6] => myReg7[6].IN1
myReg7[7] => myReg7[7].IN1


|ServoController|i2cSlave:inst2|registerInterface:u_registerInterface
clk => myReg0[0]~reg0.CLK
clk => myReg0[1]~reg0.CLK
clk => myReg0[2]~reg0.CLK
clk => myReg0[3]~reg0.CLK
clk => myReg0[4]~reg0.CLK
clk => myReg0[5]~reg0.CLK
clk => myReg0[6]~reg0.CLK
clk => myReg0[7]~reg0.CLK
clk => myReg1[0]~reg0.CLK
clk => myReg1[1]~reg0.CLK
clk => myReg1[2]~reg0.CLK
clk => myReg1[3]~reg0.CLK
clk => myReg1[4]~reg0.CLK
clk => myReg1[5]~reg0.CLK
clk => myReg1[6]~reg0.CLK
clk => myReg1[7]~reg0.CLK
clk => myReg2[0]~reg0.CLK
clk => myReg2[1]~reg0.CLK
clk => myReg2[2]~reg0.CLK
clk => myReg2[3]~reg0.CLK
clk => myReg2[4]~reg0.CLK
clk => myReg2[5]~reg0.CLK
clk => myReg2[6]~reg0.CLK
clk => myReg2[7]~reg0.CLK
clk => myReg3[0]~reg0.CLK
clk => myReg3[1]~reg0.CLK
clk => myReg3[2]~reg0.CLK
clk => myReg3[3]~reg0.CLK
clk => myReg3[4]~reg0.CLK
clk => myReg3[5]~reg0.CLK
clk => myReg3[6]~reg0.CLK
clk => myReg3[7]~reg0.CLK
clk => dataOut[0]~reg0.CLK
clk => dataOut[1]~reg0.CLK
clk => dataOut[2]~reg0.CLK
clk => dataOut[3]~reg0.CLK
clk => dataOut[4]~reg0.CLK
clk => dataOut[5]~reg0.CLK
clk => dataOut[6]~reg0.CLK
clk => dataOut[7]~reg0.CLK
addr[0] => Decoder0.IN7
addr[1] => Decoder0.IN6
addr[2] => Decoder0.IN5
addr[3] => Decoder0.IN4
addr[4] => Decoder0.IN3
addr[5] => Decoder0.IN2
addr[6] => Decoder0.IN1
addr[7] => Decoder0.IN0
dataIn[0] => myReg3.DATAB
dataIn[0] => myReg2.DATAB
dataIn[0] => myReg1.DATAB
dataIn[0] => myReg0.DATAB
dataIn[1] => myReg3.DATAB
dataIn[1] => myReg2.DATAB
dataIn[1] => myReg1.DATAB
dataIn[1] => myReg0.DATAB
dataIn[2] => myReg3.DATAB
dataIn[2] => myReg2.DATAB
dataIn[2] => myReg1.DATAB
dataIn[2] => myReg0.DATAB
dataIn[3] => myReg3.DATAB
dataIn[3] => myReg2.DATAB
dataIn[3] => myReg1.DATAB
dataIn[3] => myReg0.DATAB
dataIn[4] => myReg3.DATAB
dataIn[4] => myReg2.DATAB
dataIn[4] => myReg1.DATAB
dataIn[4] => myReg0.DATAB
dataIn[5] => myReg3.DATAB
dataIn[5] => myReg2.DATAB
dataIn[5] => myReg1.DATAB
dataIn[5] => myReg0.DATAB
dataIn[6] => myReg3.DATAB
dataIn[6] => myReg2.DATAB
dataIn[6] => myReg1.DATAB
dataIn[6] => myReg0.DATAB
dataIn[7] => myReg3.DATAB
dataIn[7] => myReg2.DATAB
dataIn[7] => myReg1.DATAB
dataIn[7] => myReg0.DATAB
writeEn => myReg0[5]~reg0.ENA
writeEn => myReg0[4]~reg0.ENA
writeEn => myReg0[3]~reg0.ENA
writeEn => myReg0[2]~reg0.ENA
writeEn => myReg0[1]~reg0.ENA
writeEn => myReg0[0]~reg0.ENA
writeEn => myReg0[6]~reg0.ENA
writeEn => myReg0[7]~reg0.ENA
writeEn => myReg1[0]~reg0.ENA
writeEn => myReg1[1]~reg0.ENA
writeEn => myReg1[2]~reg0.ENA
writeEn => myReg1[3]~reg0.ENA
writeEn => myReg1[4]~reg0.ENA
writeEn => myReg1[5]~reg0.ENA
writeEn => myReg1[6]~reg0.ENA
writeEn => myReg1[7]~reg0.ENA
writeEn => myReg2[0]~reg0.ENA
writeEn => myReg2[1]~reg0.ENA
writeEn => myReg2[2]~reg0.ENA
writeEn => myReg2[3]~reg0.ENA
writeEn => myReg2[4]~reg0.ENA
writeEn => myReg2[5]~reg0.ENA
writeEn => myReg2[6]~reg0.ENA
writeEn => myReg2[7]~reg0.ENA
writeEn => myReg3[0]~reg0.ENA
writeEn => myReg3[1]~reg0.ENA
writeEn => myReg3[2]~reg0.ENA
writeEn => myReg3[3]~reg0.ENA
writeEn => myReg3[4]~reg0.ENA
writeEn => myReg3[5]~reg0.ENA
writeEn => myReg3[6]~reg0.ENA
writeEn => myReg3[7]~reg0.ENA
dataOut[0] <= dataOut[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[1] <= dataOut[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[2] <= dataOut[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[3] <= dataOut[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[4] <= dataOut[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[5] <= dataOut[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[6] <= dataOut[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[7] <= dataOut[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg0[0] <= myReg0[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg0[1] <= myReg0[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg0[2] <= myReg0[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg0[3] <= myReg0[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg0[4] <= myReg0[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg0[5] <= myReg0[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg0[6] <= myReg0[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg0[7] <= myReg0[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg1[0] <= myReg1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg1[1] <= myReg1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg1[2] <= myReg1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg1[3] <= myReg1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg1[4] <= myReg1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg1[5] <= myReg1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg1[6] <= myReg1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg1[7] <= myReg1[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg2[0] <= myReg2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg2[1] <= myReg2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg2[2] <= myReg2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg2[3] <= myReg2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg2[4] <= myReg2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg2[5] <= myReg2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg2[6] <= myReg2[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg2[7] <= myReg2[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg3[0] <= myReg3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg3[1] <= myReg3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg3[2] <= myReg3[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg3[3] <= myReg3[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg3[4] <= myReg3[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg3[5] <= myReg3[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg3[6] <= myReg3[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg3[7] <= myReg3[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
myReg4[0] => Selector7.IN14
myReg4[1] => Selector6.IN14
myReg4[2] => Selector5.IN14
myReg4[3] => Selector4.IN14
myReg4[4] => Selector3.IN14
myReg4[5] => Selector2.IN14
myReg4[6] => Selector1.IN14
myReg4[7] => Selector0.IN14
myReg5[0] => Selector7.IN15
myReg5[1] => Selector6.IN15
myReg5[2] => Selector5.IN15
myReg5[3] => Selector4.IN15
myReg5[4] => Selector3.IN15
myReg5[5] => Selector2.IN15
myReg5[6] => Selector1.IN15
myReg5[7] => Selector0.IN15
myReg6[0] => Selector7.IN16
myReg6[1] => Selector6.IN16
myReg6[2] => Selector5.IN16
myReg6[3] => Selector4.IN16
myReg6[4] => Selector3.IN16
myReg6[5] => Selector2.IN16
myReg6[6] => Selector1.IN16
myReg6[7] => Selector0.IN16
myReg7[0] => Selector7.IN17
myReg7[1] => Selector6.IN17
myReg7[2] => Selector5.IN17
myReg7[3] => Selector4.IN17
myReg7[4] => Selector3.IN17
myReg7[5] => Selector2.IN17
myReg7[6] => Selector1.IN17
myReg7[7] => Selector0.IN17


|ServoController|i2cSlave:inst2|serialInterface:u_serialInterface
clearStartStopDet <= clearStartStopDet~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => regAddr[0]~reg0.CLK
clk => regAddr[1]~reg0.CLK
clk => regAddr[2]~reg0.CLK
clk => regAddr[3]~reg0.CLK
clk => regAddr[4]~reg0.CLK
clk => regAddr[5]~reg0.CLK
clk => regAddr[6]~reg0.CLK
clk => regAddr[7]~reg0.CLK
clk => bitCnt[0].CLK
clk => bitCnt[1].CLK
clk => bitCnt[2].CLK
clk => rxData[0].CLK
clk => rxData[1].CLK
clk => rxData[2].CLK
clk => rxData[3].CLK
clk => rxData[4].CLK
clk => rxData[5].CLK
clk => rxData[6].CLK
clk => rxData[7].CLK
clk => txData[0].CLK
clk => txData[1].CLK
clk => txData[2].CLK
clk => txData[3].CLK
clk => txData[4].CLK
clk => txData[5].CLK
clk => txData[6].CLK
clk => txData[7].CLK
clk => clearStartStopDet~reg0.CLK
clk => dataOut[0]~reg0.CLK
clk => dataOut[1]~reg0.CLK
clk => dataOut[2]~reg0.CLK
clk => dataOut[3]~reg0.CLK
clk => dataOut[4]~reg0.CLK
clk => dataOut[5]~reg0.CLK
clk => dataOut[6]~reg0.CLK
clk => dataOut[7]~reg0.CLK
clk => writeEn~reg0.CLK
clk => sdaOut~reg0.CLK
clk => streamSt~1.DATAIN
clk => CurrState_SISt~1.DATAIN
dataIn[0] => next_txData.DATAB
dataIn[1] => next_txData.DATAB
dataIn[2] => next_txData.DATAB
dataIn[3] => next_txData.DATAB
dataIn[4] => next_txData.DATAB
dataIn[5] => next_txData.DATAB
dataIn[6] => next_txData.DATAB
dataIn[7] => next_txData.DATAB
dataOut[0] <= dataOut[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[1] <= dataOut[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[2] <= dataOut[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[3] <= dataOut[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[4] <= dataOut[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[5] <= dataOut[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[6] <= dataOut[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[7] <= dataOut[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
regAddr[0] <= regAddr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
regAddr[1] <= regAddr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
regAddr[2] <= regAddr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
regAddr[3] <= regAddr[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
regAddr[4] <= regAddr[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
regAddr[5] <= regAddr[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
regAddr[6] <= regAddr[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
regAddr[7] <= regAddr[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rst => CurrState_SISt.OUTPUTSELECT
rst => CurrState_SISt.OUTPUTSELECT
rst => CurrState_SISt.OUTPUTSELECT
rst => CurrState_SISt.OUTPUTSELECT
rst => CurrState_SISt.OUTPUTSELECT
rst => CurrState_SISt.OUTPUTSELECT
rst => CurrState_SISt.OUTPUTSELECT
rst => CurrState_SISt.OUTPUTSELECT
rst => CurrState_SISt.OUTPUTSELECT
rst => CurrState_SISt.OUTPUTSELECT
rst => CurrState_SISt.OUTPUTSELECT
rst => CurrState_SISt.OUTPUTSELECT
rst => CurrState_SISt.OUTPUTSELECT
rst => CurrState_SISt.OUTPUTSELECT
rst => CurrState_SISt.OUTPUTSELECT
rst => CurrState_SISt.OUTPUTSELECT
rst => sdaOut.OUTPUTSELECT
rst => writeEn.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => clearStartStopDet.OUTPUTSELECT
rst => streamSt.OUTPUTSELECT
rst => streamSt.OUTPUTSELECT
rst => streamSt.OUTPUTSELECT
rst => streamSt.OUTPUTSELECT
rst => txData.OUTPUTSELECT
rst => txData.OUTPUTSELECT
rst => txData.OUTPUTSELECT
rst => txData.OUTPUTSELECT
rst => txData.OUTPUTSELECT
rst => txData.OUTPUTSELECT
rst => txData.OUTPUTSELECT
rst => txData.OUTPUTSELECT
rst => rxData.OUTPUTSELECT
rst => rxData.OUTPUTSELECT
rst => rxData.OUTPUTSELECT
rst => rxData.OUTPUTSELECT
rst => rxData.OUTPUTSELECT
rst => rxData.OUTPUTSELECT
rst => rxData.OUTPUTSELECT
rst => rxData.OUTPUTSELECT
rst => bitCnt.OUTPUTSELECT
rst => bitCnt.OUTPUTSELECT
rst => bitCnt.OUTPUTSELECT
rst => regAddr[7]~reg0.ENA
rst => regAddr[6]~reg0.ENA
rst => regAddr[5]~reg0.ENA
rst => regAddr[4]~reg0.ENA
rst => regAddr[3]~reg0.ENA
rst => regAddr[2]~reg0.ENA
rst => regAddr[1]~reg0.ENA
rst => regAddr[0]~reg0.ENA
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => next_streamSt.OUTPUTSELECT
scl => next_streamSt.OUTPUTSELECT
scl => next_streamSt.OUTPUTSELECT
scl => next_streamSt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => next_rxData.OUTPUTSELECT
scl => next_rxData.OUTPUTSELECT
scl => next_rxData.OUTPUTSELECT
scl => next_rxData.OUTPUTSELECT
scl => next_rxData.OUTPUTSELECT
scl => next_rxData.OUTPUTSELECT
scl => next_rxData.OUTPUTSELECT
scl => next_rxData.OUTPUTSELECT
scl => next_bitCnt.OUTPUTSELECT
scl => next_bitCnt.OUTPUTSELECT
scl => next_bitCnt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => next_sdaOut.OUTPUTSELECT
scl => next_txData.OUTPUTSELECT
scl => next_txData.OUTPUTSELECT
scl => next_txData.OUTPUTSELECT
scl => next_txData.OUTPUTSELECT
scl => next_txData.OUTPUTSELECT
scl => next_txData.OUTPUTSELECT
scl => next_txData.OUTPUTSELECT
scl => next_txData.OUTPUTSELECT
scl => always0.IN1
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => next_sdaOut.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
scl => next_bitCnt.OUTPUTSELECT
scl => next_bitCnt.OUTPUTSELECT
scl => next_bitCnt.OUTPUTSELECT
scl => next_streamSt.OUTPUTSELECT
scl => next_streamSt.OUTPUTSELECT
scl => next_streamSt.OUTPUTSELECT
scl => next_streamSt.OUTPUTSELECT
scl => next_rxData.OUTPUTSELECT
scl => next_rxData.OUTPUTSELECT
scl => next_rxData.OUTPUTSELECT
scl => next_rxData.OUTPUTSELECT
scl => next_rxData.OUTPUTSELECT
scl => next_rxData.OUTPUTSELECT
scl => next_rxData.OUTPUTSELECT
scl => next_rxData.OUTPUTSELECT
scl => NextState_SISt.OUTPUTSELECT
sdaIn => next_streamSt.OUTPUTSELECT
sdaIn => next_streamSt.OUTPUTSELECT
sdaIn => next_streamSt.OUTPUTSELECT
sdaIn => next_streamSt.OUTPUTSELECT
sdaIn => next_rxData.DATAB
sdaOut <= sdaOut~reg0.DB_MAX_OUTPUT_PORT_TYPE
startStopDetState[0] => Equal3.IN3
startStopDetState[0] => Equal4.IN3
startStopDetState[0] => Equal1.IN1
startStopDetState[0] => Equal2.IN1
startStopDetState[0] => Equal7.IN0
startStopDetState[1] => Equal3.IN2
startStopDetState[1] => Equal4.IN2
startStopDetState[1] => Equal1.IN0
startStopDetState[1] => Equal2.IN0
startStopDetState[1] => Equal7.IN1
writeEn <= writeEn~reg0.DB_MAX_OUTPUT_PORT_TYPE


